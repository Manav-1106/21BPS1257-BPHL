{"ast":null,"code":"var _jsxFileName = \"/Users/manavguduguntla/Desktop/bajajfinserv/frontend/src/App.js\",\n  _s = $RefreshSig$();\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Middleware\napp.use(cors()); // Enable CORS\napp.use(bodyParser.json()); // Parses JSON bodies\n\n// POST endpoint to process data\napp.post('/bfhl', (req, res) => {\n  try {\n    const data = req.body.data;\n    if (!data) {\n      throw new Error(\"No data field provided in the request body.\");\n    }\n    const numbers = data.filter(item => !isNaN(item));\n    const alphabets = data.filter(item => isNaN(item) && /[a-zA-Z]/.test(item));\n    const highestLowercase = alphabets.filter(char => char === char.toLowerCase()).sort().pop();\n    res.json({\n      is_success: true,\n      user_id: \"john_doe_17091999\",\n      // Example user_id, adapt as needed\n      email: \"john@xyz.com\",\n      // Example email, adapt as needed\n      roll_number: \"ABCD123\",\n      // Example roll number, adapt as needed\n      numbers,\n      alphabets,\n      highest_lowercase_alphabet: highestLowercase ? [highestLowercase] : []\n    });\n  } catch (error) {\n    console.error(\"Error processing request:\", error.message);\n    res.status(400).json({\n      is_success: false,\n      message: error.message\n    });\n  }\n});\n\n// GET endpoint returns a hardcoded operation_code\napp.get('/bfhl', (req, res) => {\n  res.status(200).json({\n    operation_code: 1\n  });\n});\n\n// Start the server\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  // Improved JSON validation function\n  const isValidJSON = string => {\n    try {\n      JSON.parse(string);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n  const handleSubmit = async () => {\n    if (!isValidJSON(input)) {\n      setError('Invalid JSON input. Please correct it and try again.');\n      setResult(null);\n      return;\n    }\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/bfhl', JSON.parse(input));\n      setResult(response.data);\n      setError('');\n    } catch (error) {\n      setError('Error fetching results. Make sure the backend server is running.');\n      console.error(\"Error details:\", error.response || error); // Log error details to debug\n      setResult(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BFHL Data Processor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: handleInputChange,\n        style: {\n          width: '300px',\n          height: '100px',\n          marginBottom: '10px'\n        },\n        placeholder: \"Enter JSON data here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", result && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        backgroundColor: '#f0f0f0',\n        padding: '10px'\n      },\n      children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rP+fUmHJAIpqMyjevfZaMvGehJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["express","require","bodyParser","cors","app","PORT","process","env","use","json","post","req","res","data","body","Error","numbers","filter","item","isNaN","alphabets","test","highestLowercase","char","toLowerCase","sort","pop","is_success","user_id","email","roll_number","highest_lowercase_alphabet","error","console","message","status","get","operation_code","listen","log","React","useState","axios","jsxDEV","_jsxDEV","App","_s","input","setInput","result","setResult","setError","handleInputChange","e","target","value","isValidJSON","string","JSON","parse","handleSubmit","response","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","width","height","marginBottom","placeholder","onClick","color","marginTop","backgroundColor","stringify","_c","$RefreshReg$"],"sources":["/Users/manavguduguntla/Desktop/bajajfinserv/frontend/src/App.js"],"sourcesContent":["const express = require('express');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Middleware\napp.use(cors()); // Enable CORS\napp.use(bodyParser.json()); // Parses JSON bodies\n\n// POST endpoint to process data\napp.post('/bfhl', (req, res) => {\n    try {\n        const data = req.body.data;\n        if (!data) {\n            throw new Error(\"No data field provided in the request body.\");\n        }\n\n        const numbers = data.filter(item => !isNaN(item));\n        const alphabets = data.filter(item => isNaN(item) && /[a-zA-Z]/.test(item));\n        const highestLowercase = alphabets\n            .filter(char => char === char.toLowerCase())\n            .sort()\n            .pop();\n\n        res.json({\n            is_success: true,\n            user_id: \"john_doe_17091999\",  // Example user_id, adapt as needed\n            email: \"john@xyz.com\",        // Example email, adapt as needed\n            roll_number: \"ABCD123\",       // Example roll number, adapt as needed\n            numbers,\n            alphabets,\n            highest_lowercase_alphabet: highestLowercase ? [highestLowercase] : []\n        });\n    } catch (error) {\n        console.error(\"Error processing request:\", error.message);\n        res.status(400).json({ is_success: false, message: error.message });\n    }\n});\n\n// GET endpoint returns a hardcoded operation_code\napp.get('/bfhl', (req, res) => {\n    res.status(200).json({ operation_code: 1 });\n});\n\n// Start the server\napp.listen(PORT, () => {\n    console.log(`Server running on port ${PORT}`);\n});\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // Improved JSON validation function\n  const isValidJSON = (string) => {\n    try {\n      JSON.parse(string);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!isValidJSON(input)) {\n      setError('Invalid JSON input. Please correct it and try again.');\n      setResult(null);\n      return;\n    }\n\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/bfhl', JSON.parse(input));\n      setResult(response.data);\n      setError('');\n    } catch (error) {\n      setError('Error fetching results. Make sure the backend server is running.');\n      console.error(\"Error details:\", error.response || error);  // Log error details to debug\n      setResult(null);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>BFHL Data Processor</h1>\n      <div>\n        <textarea\n          value={input}\n          onChange={handleInputChange}\n          style={{ width: '300px', height: '100px', marginBottom: '10px' }}\n          placeholder=\"Enter JSON data here\"\n        />\n        <br />\n        <button onClick={handleSubmit}>Submit</button>\n      </div>\n      {error && <div style={{ color: 'red', marginTop: '10px' }}>{error}</div>}\n      {result && (\n        <div style={{ marginTop: '20px', backgroundColor: '#f0f0f0', padding: '10px' }}>\n          <h3>Result:</h3>\n          <pre>{JSON.stringify(result, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}